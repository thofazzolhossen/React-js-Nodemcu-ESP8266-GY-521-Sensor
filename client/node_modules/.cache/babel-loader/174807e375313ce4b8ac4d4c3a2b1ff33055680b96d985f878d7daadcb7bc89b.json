{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TOFA\\\\Documents\\\\MERN\\\\Hardware\\\\Hello_World\\\\client\\\\src\\\\component\\\\gy521.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gy521 = () => {\n  _s();\n  const [accelerometer, setAccelerometer] = useState({\n    ax: 0,\n    ay: 0,\n    az: 0\n  });\n  const [gyroscope, setGyroscope] = useState({\n    gx: 0,\n    gy: 0,\n    gz: 0\n  });\n  const [message, setMessage] = useState(\"Loading...\");\n\n  // Function to fetch data from ESP8266\n  const fetchMessage = async () => {\n    try {\n      const response = await fetch(\"http://192.168.0.5/message\");\n      const data = await response.json(); // Parse the JSON data\n      // Update accelerometer and gyroscope values\n      setAccelerometer({\n        ax: data.ax,\n        ay: data.ay,\n        az: data.az\n      });\n      setGyroscope({\n        gx: data.gx,\n        gy: data.gy,\n        gz: data.gz\n      });\n    } catch (error) {\n      console.error(\"Error fetching message:\", error);\n      setMessage(\"Failed to load message\");\n    }\n  };\n  useEffect(() => {\n    // Fetch the message immediately on mount\n    fetchMessage();\n\n    // Set up the interval to fetch the data every 1 second (1000 ms)\n    const interval = setInterval(() => {\n      fetchMessage();\n    }, 500);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(interval);\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#1F2937'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '400px',\n        padding: '24px',\n        backgroundColor: '#2D3748',\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n        borderRadius: '16px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '24px',\n          fontWeight: '600',\n          color: 'white',\n          backgroundColor: '#3182CE',\n          padding: '12px',\n          borderRadius: '8px'\n        },\n        children: \"ESP8266, Gy521 & React js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: '18px',\n          color: '#E2E8F0',\n          marginTop: '16px'\n        },\n        children: [\"Accelerometer:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), \"X: \", accelerometer.ax, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 43\n        }, this), \" Y: \", accelerometer.ay, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 74\n        }, this), \" Z: \", accelerometer.az]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: '18px',\n          color: '#E2E8F0',\n          marginTop: '16px'\n        },\n        children: [\"Gyroscope:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \"X: \", gyroscope.gx, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 38\n        }, this), \" Y: \", gyroscope.gy, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 65\n        }, this), \" Z: \", gyroscope.gz]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Gy521, \"aTzlrbfLk0v2JnjWW45MvBfe/kM=\");\n_c = Gy521;\nexport default Gy521;\nvar _c;\n$RefreshReg$(_c, \"Gy521\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Gy521","_s","accelerometer","setAccelerometer","ax","ay","az","gyroscope","setGyroscope","gx","gy","gz","message","setMessage","fetchMessage","response","fetch","data","json","error","console","interval","setInterval","clearInterval","style","display","justifyContent","alignItems","minHeight","backgroundColor","children","width","maxWidth","padding","boxShadow","borderRadius","textAlign","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/TOFA/Documents/MERN/Hardware/Hello_World/client/src/component/gy521.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Gy521 = () => {\r\n    const [accelerometer, setAccelerometer] = useState({ ax: 0, ay: 0, az: 0 });\r\n    const [gyroscope, setGyroscope] = useState({ gx: 0, gy: 0, gz: 0 });\r\n    const [message, setMessage] = useState(\"Loading...\");\r\n\r\n    // Function to fetch data from ESP8266\r\n    const fetchMessage = async () => {\r\n        try {\r\n            const response = await fetch(\"http://192.168.0.5/message\");\r\n            const data = await response.json(); // Parse the JSON data\r\n            // Update accelerometer and gyroscope values\r\n            setAccelerometer({\r\n                ax: data.ax,\r\n                ay: data.ay,\r\n                az: data.az,\r\n            });\r\n            setGyroscope({\r\n                gx: data.gx,\r\n                gy: data.gy,\r\n                gz: data.gz,\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error fetching message:\", error);\r\n            setMessage(\"Failed to load message\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch the message immediately on mount\r\n        fetchMessage();\r\n\r\n        // Set up the interval to fetch the data every 1 second (1000 ms)\r\n        const interval = setInterval(() => {\r\n            fetchMessage();\r\n        }, 500);\r\n\r\n        // Clean up the interval on component unmount\r\n        return () => clearInterval(interval);\r\n    }, []);  // Empty dependency array ensures this runs only once on mount\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', backgroundColor: '#1F2937' }}>\r\n            <div style={{ width: '100%', maxWidth: '400px', padding: '24px', backgroundColor: '#2D3748', boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)', borderRadius: '16px', textAlign: 'center' }}>\r\n                <h2 style={{ fontSize: '24px', fontWeight: '600', color: 'white', backgroundColor: '#3182CE', padding: '12px', borderRadius: '8px' }}>\r\n                    ESP8266, Gy521 & React js\r\n                </h2>\r\n                <h3 style={{ fontSize: '18px', color: '#E2E8F0', marginTop: '16px' }}>\r\n                    Accelerometer:\r\n                    <br />\r\n                    X: {accelerometer.ax} <br></br> Y: {accelerometer.ay}<br></br> Z: {accelerometer.az}\r\n                </h3>\r\n                <hr></hr>\r\n                <h3 style={{ fontSize: '18px', color: '#E2E8F0', marginTop: '16px' }}>\r\n                    Gyroscope:\r\n                    <br />\r\n                    X: {gyroscope.gx}<br></br> Y: {gyroscope.gy}<br></br> Z: {gyroscope.gz}\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gy521;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}